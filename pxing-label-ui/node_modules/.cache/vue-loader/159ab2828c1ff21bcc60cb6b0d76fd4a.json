{"remainingRequest":"/home/zhoup/IdeaProjects/jeethink/pxing-lable-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zhoup/IdeaProjects/jeethink/pxing-lable-ui/src/components/ThemePicker/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-lable-ui/src/components/ThemePicker/index.vue","mtime":1628660985659},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-lable-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-lable-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-lable-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-lable-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IHZlcnNpb24gPSByZXF1aXJlKCdlbGVtZW50LXVpL3BhY2thZ2UuanNvbicpLnZlcnNpb24gLy8gZWxlbWVudC11aSB2ZXJzaW9uIGZyb20gbm9kZV9tb2R1bGVzCmNvbnN0IE9SSUdJTkFMX1RIRU1FID0gJyM0MDlFRkYnIC8vIGRlZmF1bHQgY29sb3IKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhbGs6ICcnLCAvLyBjb250ZW50IG9mIHRoZW1lLWNoYWxrIGNzcwogICAgICB0aGVtZTogJycKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBkZWZhdWx0VGhlbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5ncy50aGVtZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGRlZmF1bHRUaGVtZTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbih2YWwsIG9sZFZhbCkgewogICAgICAgIHRoaXMudGhlbWUgPSB2YWwKICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9LAogICAgYXN5bmMgdGhlbWUodmFsKSB7CiAgICAgIGNvbnN0IG9sZFZhbCA9IHRoaXMuY2hhbGsgPyB0aGlzLnRoZW1lIDogT1JJR0lOQUxfVEhFTUUKICAgICAgaWYgKHR5cGVvZiB2YWwgIT09ICdzdHJpbmcnKSByZXR1cm4KICAgICAgY29uc3QgdGhlbWVDbHVzdGVyID0gdGhpcy5nZXRUaGVtZUNsdXN0ZXIodmFsLnJlcGxhY2UoJyMnLCAnJykpCiAgICAgIGNvbnN0IG9yaWdpbmFsQ2x1c3RlciA9IHRoaXMuZ2V0VGhlbWVDbHVzdGVyKG9sZFZhbC5yZXBsYWNlKCcjJywgJycpKQoKICAgICAgY29uc3QgJG1lc3NhZ2UgPSB0aGlzLiRtZXNzYWdlKHsKICAgICAgICBtZXNzYWdlOiAnICBDb21waWxpbmcgdGhlIHRoZW1lJywKICAgICAgICBjdXN0b21DbGFzczogJ3RoZW1lLW1lc3NhZ2UnLAogICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICBkdXJhdGlvbjogMCwKICAgICAgICBpY29uQ2xhc3M6ICdlbC1pY29uLWxvYWRpbmcnCiAgICAgIH0pCgogICAgICBjb25zdCBnZXRIYW5kbGVyID0gKHZhcmlhYmxlLCBpZCkgPT4gewogICAgICAgIHJldHVybiAoKSA9PiB7CiAgICAgICAgICBjb25zdCBvcmlnaW5hbENsdXN0ZXIgPSB0aGlzLmdldFRoZW1lQ2x1c3RlcihPUklHSU5BTF9USEVNRS5yZXBsYWNlKCcjJywgJycpKQogICAgICAgICAgY29uc3QgbmV3U3R5bGUgPSB0aGlzLnVwZGF0ZVN0eWxlKHRoaXNbdmFyaWFibGVdLCBvcmlnaW5hbENsdXN0ZXIsIHRoZW1lQ2x1c3RlcikKCiAgICAgICAgICBsZXQgc3R5bGVUYWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkKICAgICAgICAgIGlmICghc3R5bGVUYWcpIHsKICAgICAgICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpCiAgICAgICAgICAgIHN0eWxlVGFnLnNldEF0dHJpYnV0ZSgnaWQnLCBpZCkKICAgICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZVRhZykKICAgICAgICAgIH0KICAgICAgICAgIHN0eWxlVGFnLmlubmVyVGV4dCA9IG5ld1N0eWxlCiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoIXRoaXMuY2hhbGspIHsKICAgICAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly91bnBrZy5jb20vZWxlbWVudC11aUAke3ZlcnNpb259L2xpYi90aGVtZS1jaGFsay9pbmRleC5jc3NgCiAgICAgICAgYXdhaXQgdGhpcy5nZXRDU1NTdHJpbmcodXJsLCAnY2hhbGsnKQogICAgICB9CgogICAgICBjb25zdCBjaGFsa0hhbmRsZXIgPSBnZXRIYW5kbGVyKCdjaGFsaycsICdjaGFsay1zdHlsZScpCgogICAgICBjaGFsa0hhbmRsZXIoKQoKICAgICAgY29uc3Qgc3R5bGVzID0gW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzdHlsZScpKQogICAgICAgIC5maWx0ZXIoc3R5bGUgPT4gewogICAgICAgICAgY29uc3QgdGV4dCA9IHN0eWxlLmlubmVyVGV4dAogICAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAob2xkVmFsLCAnaScpLnRlc3QodGV4dCkgJiYgIS9DaGFsayBWYXJpYWJsZXMvLnRlc3QodGV4dCkKICAgICAgICB9KQogICAgICBzdHlsZXMuZm9yRWFjaChzdHlsZSA9PiB7CiAgICAgICAgY29uc3QgeyBpbm5lclRleHQgfSA9IHN0eWxlCiAgICAgICAgaWYgKHR5cGVvZiBpbm5lclRleHQgIT09ICdzdHJpbmcnKSByZXR1cm4KICAgICAgICBzdHlsZS5pbm5lclRleHQgPSB0aGlzLnVwZGF0ZVN0eWxlKGlubmVyVGV4dCwgb3JpZ2luYWxDbHVzdGVyLCB0aGVtZUNsdXN0ZXIpCiAgICAgIH0pCgogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB2YWwpCgogICAgICAkbWVzc2FnZS5jbG9zZSgpCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgdXBkYXRlU3R5bGUoc3R5bGUsIG9sZENsdXN0ZXIsIG5ld0NsdXN0ZXIpIHsKICAgICAgbGV0IG5ld1N0eWxlID0gc3R5bGUKICAgICAgb2xkQ2x1c3Rlci5mb3JFYWNoKChjb2xvciwgaW5kZXgpID0+IHsKICAgICAgICBuZXdTdHlsZSA9IG5ld1N0eWxlLnJlcGxhY2UobmV3IFJlZ0V4cChjb2xvciwgJ2lnJyksIG5ld0NsdXN0ZXJbaW5kZXhdKQogICAgICB9KQogICAgICByZXR1cm4gbmV3U3R5bGUKICAgIH0sCgogICAgZ2V0Q1NTU3RyaW5nKHVybCwgdmFyaWFibGUpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgIGNvbnN0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpCiAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9ICgpID0+IHsKICAgICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCAmJiB4aHIuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgdGhpc1t2YXJpYWJsZV0gPSB4aHIucmVzcG9uc2VUZXh0LnJlcGxhY2UoL0Bmb250LWZhY2V7W159XSt9LywgJycpCiAgICAgICAgICAgIHJlc29sdmUoKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICB4aHIub3BlbignR0VUJywgdXJsKQogICAgICAgIHhoci5zZW5kKCkKICAgICAgfSkKICAgIH0sCgogICAgZ2V0VGhlbWVDbHVzdGVyKHRoZW1lKSB7CiAgICAgIGNvbnN0IHRpbnRDb2xvciA9IChjb2xvciwgdGludCkgPT4gewogICAgICAgIGxldCByZWQgPSBwYXJzZUludChjb2xvci5zbGljZSgwLCAyKSwgMTYpCiAgICAgICAgbGV0IGdyZWVuID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMiwgNCksIDE2KQogICAgICAgIGxldCBibHVlID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoNCwgNiksIDE2KQoKICAgICAgICBpZiAodGludCA9PT0gMCkgeyAvLyB3aGVuIHByaW1hcnkgY29sb3IgaXMgaW4gaXRzIHJnYiBzcGFjZQogICAgICAgICAgcmV0dXJuIFtyZWQsIGdyZWVuLCBibHVlXS5qb2luKCcsJykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVkICs9IE1hdGgucm91bmQodGludCAqICgyNTUgLSByZWQpKQogICAgICAgICAgZ3JlZW4gKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIGdyZWVuKSkKICAgICAgICAgIGJsdWUgKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIGJsdWUpKQoKICAgICAgICAgIHJlZCA9IHJlZC50b1N0cmluZygxNikKICAgICAgICAgIGdyZWVuID0gZ3JlZW4udG9TdHJpbmcoMTYpCiAgICAgICAgICBibHVlID0gYmx1ZS50b1N0cmluZygxNikKCiAgICAgICAgICByZXR1cm4gYCMke3JlZH0ke2dyZWVufSR7Ymx1ZX1gCiAgICAgICAgfQogICAgICB9CgogICAgICBjb25zdCBzaGFkZUNvbG9yID0gKGNvbG9yLCBzaGFkZSkgPT4gewogICAgICAgIGxldCByZWQgPSBwYXJzZUludChjb2xvci5zbGljZSgwLCAyKSwgMTYpCiAgICAgICAgbGV0IGdyZWVuID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMiwgNCksIDE2KQogICAgICAgIGxldCBibHVlID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoNCwgNiksIDE2KQoKICAgICAgICByZWQgPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogcmVkKQogICAgICAgIGdyZWVuID0gTWF0aC5yb3VuZCgoMSAtIHNoYWRlKSAqIGdyZWVuKQogICAgICAgIGJsdWUgPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogYmx1ZSkKCiAgICAgICAgcmVkID0gcmVkLnRvU3RyaW5nKDE2KQogICAgICAgIGdyZWVuID0gZ3JlZW4udG9TdHJpbmcoMTYpCiAgICAgICAgYmx1ZSA9IGJsdWUudG9TdHJpbmcoMTYpCgogICAgICAgIHJldHVybiBgIyR7cmVkfSR7Z3JlZW59JHtibHVlfWAKICAgICAgfQoKICAgICAgY29uc3QgY2x1c3RlcnMgPSBbdGhlbWVdCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IDk7IGkrKykgewogICAgICAgIGNsdXN0ZXJzLnB1c2godGludENvbG9yKHRoZW1lLCBOdW1iZXIoKGkgLyAxMCkudG9GaXhlZCgyKSkpKQogICAgICB9CiAgICAgIGNsdXN0ZXJzLnB1c2goc2hhZGVDb2xvcih0aGVtZSwgMC4xKSkKICAgICAgcmV0dXJuIGNsdXN0ZXJzCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ThemePicker","sourcesContent":["<template>\n  <el-color-picker\n    v-model=\"theme\"\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\n    class=\"theme-picker\"\n    popper-class=\"theme-picker-dropdown\"\n  />\n</template>\n\n<script>\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\nconst ORIGINAL_THEME = '#409EFF' // default color\n\nexport default {\n  data() {\n    return {\n      chalk: '', // content of theme-chalk css\n      theme: ''\n    }\n  },\n  computed: {\n    defaultTheme() {\n      return this.$store.state.settings.theme\n    }\n  },\n  watch: {\n    defaultTheme: {\n      handler: function(val, oldVal) {\n        this.theme = val\n      },\n      immediate: true\n    },\n    async theme(val) {\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\n      if (typeof val !== 'string') return\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\n\n      const $message = this.$message({\n        message: '  Compiling the theme',\n        customClass: 'theme-message',\n        type: 'success',\n        duration: 0,\n        iconClass: 'el-icon-loading'\n      })\n\n      const getHandler = (variable, id) => {\n        return () => {\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\n\n          let styleTag = document.getElementById(id)\n          if (!styleTag) {\n            styleTag = document.createElement('style')\n            styleTag.setAttribute('id', id)\n            document.head.appendChild(styleTag)\n          }\n          styleTag.innerText = newStyle\n        }\n      }\n\n      if (!this.chalk) {\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\n        await this.getCSSString(url, 'chalk')\n      }\n\n      const chalkHandler = getHandler('chalk', 'chalk-style')\n\n      chalkHandler()\n\n      const styles = [].slice.call(document.querySelectorAll('style'))\n        .filter(style => {\n          const text = style.innerText\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\n        })\n      styles.forEach(style => {\n        const { innerText } = style\n        if (typeof innerText !== 'string') return\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\n      })\n\n      this.$emit('change', val)\n\n      $message.close()\n    }\n  },\n\n  methods: {\n    updateStyle(style, oldCluster, newCluster) {\n      let newStyle = style\n      oldCluster.forEach((color, index) => {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\n      })\n      return newStyle\n    },\n\n    getCSSString(url, variable) {\n      return new Promise(resolve => {\n        const xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\n            resolve()\n          }\n        }\n        xhr.open('GET', url)\n        xhr.send()\n      })\n    },\n\n    getThemeCluster(theme) {\n      const tintColor = (color, tint) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        if (tint === 0) { // when primary color is in its rgb space\n          return [red, green, blue].join(',')\n        } else {\n          red += Math.round(tint * (255 - red))\n          green += Math.round(tint * (255 - green))\n          blue += Math.round(tint * (255 - blue))\n\n          red = red.toString(16)\n          green = green.toString(16)\n          blue = blue.toString(16)\n\n          return `#${red}${green}${blue}`\n        }\n      }\n\n      const shadeColor = (color, shade) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        red = Math.round((1 - shade) * red)\n        green = Math.round((1 - shade) * green)\n        blue = Math.round((1 - shade) * blue)\n\n        red = red.toString(16)\n        green = green.toString(16)\n        blue = blue.toString(16)\n\n        return `#${red}${green}${blue}`\n      }\n\n      const clusters = [theme]\n      for (let i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\n      }\n      clusters.push(shadeColor(theme, 0.1))\n      return clusters\n    }\n  }\n}\n</script>\n\n<style>\n.theme-message,\n.theme-picker-dropdown {\n  z-index: 99999 !important;\n}\n\n.theme-picker .el-color-picker__trigger {\n  height: 26px !important;\n  width: 26px !important;\n  padding: 2px;\n}\n\n.theme-picker-dropdown .el-color-dropdown__link-btn {\n  display: none;\n}\n</style>\n"]}]}