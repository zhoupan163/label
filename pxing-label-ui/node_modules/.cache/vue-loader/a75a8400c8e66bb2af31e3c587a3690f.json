{"remainingRequest":"/home/zhoup/IdeaProjects/jeethink/jeethink-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zhoup/IdeaProjects/jeethink/jeethink-ui/src/components/DictTag/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zhoup/IdeaProjects/jeethink/jeethink-ui/src/components/DictTag/index.vue","mtime":1628660985659},{"path":"/home/zhoup/IdeaProjects/jeethink/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zhoup/IdeaProjects/jeethink/jeethink-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/zhoup/IdeaProjects/jeethink/jeethink-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zhoup/IdeaProjects/jeethink/jeethink-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGljdFRhZyIsCiAgcHJvcHM6IHsKICAgIG9wdGlvbnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAogICAgdmFsdWU6IFtTdHJpbmcsIEFycmF5XSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICB2YWx1ZXMoKSB7CiAgICAgIGlmICh0aGlzLnZhbHVlKSB7CiAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodGhpcy52YWx1ZSkgPyB0aGlzLnZhbHVlIDogW3RoaXMudmFsdWVdOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/DictTag","sourcesContent":["<template>\n  <div>\n    <template v-for=\"(item, index) in options\">\n      <template v-if=\"values.includes(item.dictValue)\">\n        <span\n          v-if=\"item.listClass == 'default' || item.listClass == ''\"\n          :key=\"item.dictValue\"\n          :index=\"index\"\n          :class=\"item.cssClass\"\n          >{{ item.dictLabel }}</span\n        >\n        <el-tag\n          v-else\n          :key=\"item.dictValue\"\n          :index=\"index\"\n          :type=\"item.listClass == 'primary' ? '' : item.listClass\"\n          :class=\"item.cssClass\"\n        >\n          {{ item.dictLabel }}\n        </el-tag>\n      </template>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DictTag\",\n  props: {\n    options: {\n      type: Array,\n      default: null,\n    },\n    value: [String, Array],\n  },\n  computed: {\n    values() {\n      if (this.value) {\n        return Array.isArray(this.value) ? this.value : [this.value];\n      } else {\n        return [];\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.el-tag + .el-tag {\n  margin-left: 10px;\n}\n</style>"]}]}