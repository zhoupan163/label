{"remainingRequest":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/babel-loader/lib/index.js!/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/src/components/ImageUpload/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/src/components/ImageUpload/index.vue","mtime":1628768516925},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIik7Cgp2YXIgX2F1dGggPSByZXF1aXJlKCJAL3V0aWxzL2F1dGgiKTsKCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBfZGVmYXVsdDIgPSB7CiAgcHJvcHM6IHsKICAgIHZhbHVlOiBbU3RyaW5nLCBPYmplY3QsIEFycmF5XSwKICAgIC8vIOWbvueJh+aVsOmHj+mZkOWItgogICAgbGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA1CiAgICB9LAogICAgLy8g5aSn5bCP6ZmQ5Yi2KE1CKQogICAgZmlsZVNpemU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA1CiAgICB9LAogICAgLy8g5paH5Lu257G75Z6LLCDkvovlpoJbJ3BuZycsICdqcGcnLCAnanBlZyddCiAgICBmaWxlVHlwZTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFsicG5nIiwgImpwZyIsICJqcGVnIl07CiAgICAgIH0KICAgIH0sCiAgICAvLyDmmK/lkKbmmL7npLrmj5DnpLoKICAgIGlzU2hvd1RpcDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlhbG9nSW1hZ2VVcmw6ICIiLAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgaGlkZVVwbG9hZDogZmFsc2UsCiAgICAgIGJhc2VVcmw6IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEksCiAgICAgIHVwbG9hZEltZ1VybDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSSArICIvY29tbW9uL3VwbG9hZCIsCiAgICAgIC8vIOS4iuS8oOeahOWbvueJh+acjeWKoeWZqOWcsOWdgAogICAgICBoZWFkZXJzOiB7CiAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiICsgKDAsIF9hdXRoLmdldFRva2VuKSgpCiAgICAgIH0sCiAgICAgIGZpbGVMaXN0OiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHZhbCkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIGlmICh2YWwpIHsKICAgICAgICAgIC8vIOmmluWFiOWwhuWAvOi9rOS4uuaVsOe7hAogICAgICAgICAgdmFyIGxpc3QgPSBBcnJheS5pc0FycmF5KHZhbCkgPyB2YWwgOiB0aGlzLnZhbHVlLnNwbGl0KCcsJyk7IC8vIOeEtuWQjuWwhuaVsOe7hOi9rOS4uuWvueixoeaVsOe7hAoKICAgICAgICAgIHRoaXMuZmlsZUxpc3QgPSBsaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICBpZiAodHlwZW9mIGl0ZW0gPT09ICJzdHJpbmciKSB7CiAgICAgICAgICAgICAgaWYgKGl0ZW0uaW5kZXhPZihfdGhpcy5iYXNlVXJsKSA9PT0gLTEpIHsKICAgICAgICAgICAgICAgIGl0ZW0gPSB7CiAgICAgICAgICAgICAgICAgIG5hbWU6IF90aGlzLmJhc2VVcmwgKyBpdGVtLAogICAgICAgICAgICAgICAgICB1cmw6IF90aGlzLmJhc2VVcmwgKyBpdGVtCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpdGVtID0gewogICAgICAgICAgICAgICAgICBuYW1lOiBpdGVtLAogICAgICAgICAgICAgICAgICB1cmw6IGl0ZW0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gaXRlbTsKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmZpbGVMaXN0ID0gW107CiAgICAgICAgICByZXR1cm4gW107CiAgICAgICAgfQogICAgICB9LAogICAgICBkZWVwOiB0cnVlLAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDmmK/lkKbmmL7npLrmj5DnpLoKICAgIHNob3dUaXA6IGZ1bmN0aW9uIHNob3dUaXAoKSB7CiAgICAgIHJldHVybiB0aGlzLmlzU2hvd1RpcCAmJiAodGhpcy5maWxlVHlwZSB8fCB0aGlzLmZpbGVTaXplKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOWIoOmZpOWbvueJhwogICAgaGFuZGxlUmVtb3ZlOiBmdW5jdGlvbiBoYW5kbGVSZW1vdmUoZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgdmFyIGZpbmRleCA9IHRoaXMuZmlsZUxpc3QubWFwKGZ1bmN0aW9uIChmKSB7CiAgICAgICAgcmV0dXJuIGYubmFtZTsKICAgICAgfSkuaW5kZXhPZihmaWxlLm5hbWUpOwogICAgICB0aGlzLmZpbGVMaXN0LnNwbGljZShmaW5kZXgsIDEpOwogICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMubGlzdFRvU3RyaW5nKHRoaXMuZmlsZUxpc3QpKTsKICAgIH0sCiAgICAvLyDkuIrkvKDmiJDlip/lm57osIMKICAgIGhhbmRsZVVwbG9hZFN1Y2Nlc3M6IGZ1bmN0aW9uIGhhbmRsZVVwbG9hZFN1Y2Nlc3MocmVzKSB7CiAgICAgIHRoaXMuZmlsZUxpc3QucHVzaCh7CiAgICAgICAgbmFtZTogcmVzLmZpbGVOYW1lLAogICAgICAgIHVybDogcmVzLmZpbGVOYW1lCiAgICAgIH0pOwogICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMubGlzdFRvU3RyaW5nKHRoaXMuZmlsZUxpc3QpKTsKICAgICAgdGhpcy5sb2FkaW5nLmNsb3NlKCk7CiAgICB9LAogICAgLy8g5LiK5Lyg5YmNbG9hZGluZ+WKoOi9vQogICAgaGFuZGxlQmVmb3JlVXBsb2FkOiBmdW5jdGlvbiBoYW5kbGVCZWZvcmVVcGxvYWQoZmlsZSkgewogICAgICB2YXIgaXNJbWcgPSBmYWxzZTsKCiAgICAgIGlmICh0aGlzLmZpbGVUeXBlLmxlbmd0aCkgewogICAgICAgIHZhciBmaWxlRXh0ZW5zaW9uID0gIiI7CgogICAgICAgIGlmIChmaWxlLm5hbWUubGFzdEluZGV4T2YoIi4iKSA+IC0xKSB7CiAgICAgICAgICBmaWxlRXh0ZW5zaW9uID0gZmlsZS5uYW1lLnNsaWNlKGZpbGUubmFtZS5sYXN0SW5kZXhPZigiLiIpICsgMSk7CiAgICAgICAgfQoKICAgICAgICBpc0ltZyA9IHRoaXMuZmlsZVR5cGUuc29tZShmdW5jdGlvbiAodHlwZSkgewogICAgICAgICAgaWYgKGZpbGUudHlwZS5pbmRleE9mKHR5cGUpID4gLTEpIHJldHVybiB0cnVlOwogICAgICAgICAgaWYgKGZpbGVFeHRlbnNpb24gJiYgZmlsZUV4dGVuc2lvbi5pbmRleE9mKHR5cGUpID4gLTEpIHJldHVybiB0cnVlOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGlzSW1nID0gZmlsZS50eXBlLmluZGV4T2YoImltYWdlIikgPiAtMTsKICAgICAgfQoKICAgICAgaWYgKCFpc0ltZykgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIlx1NjU4N1x1NEVGNlx1NjgzQ1x1NUYwRlx1NEUwRFx1NkI2M1x1Nzg2RSwgXHU4QkY3XHU0RTBBXHU0RjIwIi5jb25jYXQodGhpcy5maWxlVHlwZS5qb2luKCIvIiksICJcdTU2RkVcdTcyNDdcdTY4M0NcdTVGMEZcdTY1ODdcdTRFRjYhIikpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZmlsZVNpemUpIHsKICAgICAgICB2YXIgaXNMdCA9IGZpbGUuc2l6ZSAvIDEwMjQgLyAxMDI0IDwgdGhpcy5maWxlU2l6ZTsKCiAgICAgICAgaWYgKCFpc0x0KSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCJcdTRFMEFcdTRGMjBcdTU5MzRcdTUwQ0ZcdTU2RkVcdTcyNDdcdTU5MjdcdTVDMEZcdTRFMERcdTgwRkRcdThEODVcdThGQzcgIi5jb25jYXQodGhpcy5maWxlU2l6ZSwgIiBNQiEiKSk7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLmxvYWRpbmcgPSB0aGlzLiRsb2FkaW5nKHsKICAgICAgICBsb2NrOiB0cnVlLAogICAgICAgIHRleHQ6ICLkuIrkvKDkuK0iLAogICAgICAgIGJhY2tncm91bmQ6ICJyZ2JhKDAsIDAsIDAsIDAuNykiCiAgICAgIH0pOwogICAgfSwKICAgIC8vIOaWh+S7tuS4quaVsOi2heWHugogICAgaGFuZGxlRXhjZWVkOiBmdW5jdGlvbiBoYW5kbGVFeGNlZWQoKSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIlx1NEUwQVx1NEYyMFx1NjU4N1x1NEVGNlx1NjU3MFx1OTFDRlx1NEUwRFx1ODBGRFx1OEQ4NVx1OEZDNyAiLmNvbmNhdCh0aGlzLmxpbWl0LCAiIFx1NEUyQSEiKSk7CiAgICB9LAogICAgLy8g5LiK5Lyg5aSx6LSlCiAgICBoYW5kbGVVcGxvYWRFcnJvcjogZnVuY3Rpb24gaGFuZGxlVXBsb2FkRXJyb3IoKSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgbWVzc2FnZTogIuS4iuS8oOWksei0pSIKICAgICAgfSk7CiAgICAgIHRoaXMubG9hZGluZy5jbG9zZSgpOwogICAgfSwKICAgIC8vIOmihOiniAogICAgaGFuZGxlUGljdHVyZUNhcmRQcmV2aWV3OiBmdW5jdGlvbiBoYW5kbGVQaWN0dXJlQ2FyZFByZXZpZXcoZmlsZSkgewogICAgICB0aGlzLmRpYWxvZ0ltYWdlVXJsID0gZmlsZS51cmw7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgLy8g5a+56LGh6L2s5oiQ5oyH5a6a5a2X56ym5Liy5YiG6ZqUCiAgICBsaXN0VG9TdHJpbmc6IGZ1bmN0aW9uIGxpc3RUb1N0cmluZyhsaXN0LCBzZXBhcmF0b3IpIHsKICAgICAgdmFyIHN0cnMgPSAiIjsKICAgICAgc2VwYXJhdG9yID0gc2VwYXJhdG9yIHx8ICIsIjsKCiAgICAgIGZvciAodmFyIGkgaW4gbGlzdCkgewogICAgICAgIHN0cnMgKz0gbGlzdFtpXS51cmwgKyBzZXBhcmF0b3I7CiAgICAgIH0KCiAgICAgIHJldHVybiBzdHJzICE9ICcnID8gc3Rycy5zdWJzdHIoMCwgc3Rycy5sZW5ndGggLSAxKSA6ICcnOwogICAgfQogIH0KfTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQyOw=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"component-upload-image\">\n    <el-upload\n      :action=\"uploadImgUrl\"\n      list-type=\"picture-card\"\n      :on-success=\"handleUploadSuccess\"\n      :before-upload=\"handleBeforeUpload\"\n      :limit=\"limit\"\n      :on-error=\"handleUploadError\"\n      :on-exceed=\"handleExceed\"\n      name=\"file\"\n      :on-remove=\"handleRemove\"\n      :show-file-list=\"true\"\n      :headers=\"headers\"\n      :file-list=\"fileList\"\n      :on-preview=\"handlePictureCardPreview\"\n      :class=\"{hide: this.fileList.length >= this.limit}\"\n    >\n      <i class=\"el-icon-plus\"></i>\n    </el-upload>\n    \n    <!-- 上传提示 -->\n    <div class=\"el-upload__tip\" slot=\"tip\" v-if=\"showTip\">\n      请上传\n      <template v-if=\"fileSize\"> 大小不超过 <b style=\"color: #f56c6c\">{{ fileSize }}MB</b> </template>\n      <template v-if=\"fileType\"> 格式为 <b style=\"color: #f56c6c\">{{ fileType.join(\"/\") }}</b> </template>\n      的文件\n    </div>\n\n    <el-dialog\n      :visible.sync=\"dialogVisible\"\n      title=\"预览\"\n      width=\"800\"\n      append-to-body\n    >\n      <img\n        :src=\"dialogImageUrl\"\n        style=\"display: block; max-width: 100%; margin: 0 auto\"\n      />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getToken } from \"@/utils/auth\";\n\nexport default {\n  props: {\n    value: [String, Object, Array],\n    // 图片数量限制\n    limit: {\n      type: Number,\n      default: 5,\n    },\n    // 大小限制(MB)\n    fileSize: {\n       type: Number,\n      default: 5,\n    },\n    // 文件类型, 例如['png', 'jpg', 'jpeg']\n    fileType: {\n      type: Array,\n      default: () => [\"png\", \"jpg\", \"jpeg\"],\n    },\n    // 是否显示提示\n    isShowTip: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      hideUpload: false,\n      baseUrl: process.env.VUE_APP_BASE_API,\n      uploadImgUrl: process.env.VUE_APP_BASE_API + \"/common/upload\", // 上传的图片服务器地址\n      headers: {\n        Authorization: \"Bearer \" + getToken(),\n      },\n      fileList: []\n    };\n  },\n  watch: {\n    value: {\n      handler(val) {\n        if (val) {\n          // 首先将值转为数组\n          const list = Array.isArray(val) ? val : this.value.split(',');\n          // 然后将数组转为对象数组\n          this.fileList = list.map(item => {\n            if (typeof item === \"string\") {\n              if (item.indexOf(this.baseUrl) === -1) {\n                  item = { name: this.baseUrl + item, url: this.baseUrl + item };\n              } else {\n                  item = { name: item, url: item };\n              }\n            }\n            return item;\n          });\n        } else {\n          this.fileList = [];\n          return [];\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  computed: {\n    // 是否显示提示\n    showTip() {\n      return this.isShowTip && (this.fileType || this.fileSize);\n    },\n  },\n  methods: {\n    // 删除图片\n    handleRemove(file, fileList) {\n      const findex = this.fileList.map(f => f.name).indexOf(file.name);\n      this.fileList.splice(findex, 1);\n      this.$emit(\"input\", this.listToString(this.fileList));\n    },\n    // 上传成功回调\n    handleUploadSuccess(res) {\n      this.fileList.push({ name: res.fileName, url: res.fileName });\n      this.$emit(\"input\", this.listToString(this.fileList));\n      this.loading.close();\n    },\n    // 上传前loading加载\n    handleBeforeUpload(file) {\n      let isImg = false;\n      if (this.fileType.length) {\n        let fileExtension = \"\";\n        if (file.name.lastIndexOf(\".\") > -1) {\n          fileExtension = file.name.slice(file.name.lastIndexOf(\".\") + 1);\n        }\n        isImg = this.fileType.some(type => {\n          if (file.type.indexOf(type) > -1) return true;\n          if (fileExtension && fileExtension.indexOf(type) > -1) return true;\n          return false;\n        });\n      } else {\n        isImg = file.type.indexOf(\"image\") > -1;\n      }\n\n      if (!isImg) {\n        this.$message.error(\n          `文件格式不正确, 请上传${this.fileType.join(\"/\")}图片格式文件!`\n        );\n        return false;\n      }\n      if (this.fileSize) {\n        const isLt = file.size / 1024 / 1024 < this.fileSize;\n        if (!isLt) {\n          this.$message.error(`上传头像图片大小不能超过 ${this.fileSize} MB!`);\n          return false;\n        }\n      }\n      this.loading = this.$loading({\n        lock: true,\n        text: \"上传中\",\n        background: \"rgba(0, 0, 0, 0.7)\",\n      });\n    },\n    // 文件个数超出\n    handleExceed() {\n      this.$message.error(`上传文件数量不能超过 ${this.limit} 个!`);\n    },\n    // 上传失败\n    handleUploadError() {\n      this.$message({\n        type: \"error\",\n        message: \"上传失败\",\n      });\n      this.loading.close();\n    },\n    // 预览\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    // 对象转成指定字符串分隔\n    listToString(list, separator) {\n      let strs = \"\";\n      separator = separator || \",\";\n      for (let i in list) {\n        strs += list[i].url + separator;\n      }\n      return strs != '' ? strs.substr(0, strs.length - 1) : '';\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n// .el-upload--picture-card 控制加号部分\n::v-deep.hide .el-upload--picture-card {\n    display: none;\n}\n// 去掉动画效果\n::v-deep .el-list-enter-active,\n::v-deep .el-list-leave-active {\n    transition: all 0s;\n}\n\n::v-deep .el-list-enter, .el-list-leave-active {\n    opacity: 0;\n    transform: translateY(0);\n}\n</style>\n\n"],"sourceRoot":"src/components/ImageUpload"}]}