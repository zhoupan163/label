{"remainingRequest":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/babel-loader/lib/index.js!/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/eslint-loader/index.js??ref--13-0!/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/src/permission.js","dependencies":[{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/src/permission.js","mtime":1628768516925},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS96aG91cC9JZGVhUHJvamVjdHMvamVldGhpbmsvcHhpbmctbGFiZWwtdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0IikuZGVmYXVsdDsKCnZhciBfb2JqZWN0U3ByZWFkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL2hvbWUvemhvdXAvSWRlYVByb2plY3RzL2plZXRoaW5rL3B4aW5nLWxhYmVsLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL29iamVjdFNwcmVhZDIiKSk7Cgp2YXIgX3JvdXRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9yb3V0ZXIiKSk7Cgp2YXIgX3N0b3JlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3N0b3JlIikpOwoKdmFyIF9lbGVtZW50VWkgPSByZXF1aXJlKCJlbGVtZW50LXVpIik7Cgp2YXIgX25wcm9ncmVzcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgibnByb2dyZXNzIikpOwoKcmVxdWlyZSgibnByb2dyZXNzL25wcm9ncmVzcy5jc3MiKTsKCnZhciBfYXV0aCA9IHJlcXVpcmUoIkAvdXRpbHMvYXV0aCIpOwoKX25wcm9ncmVzcy5kZWZhdWx0LmNvbmZpZ3VyZSh7CiAgc2hvd1NwaW5uZXI6IGZhbHNlCn0pOwoKdmFyIHdoaXRlTGlzdCA9IFsnL2xvZ2luJywgJy9hdXRoLXJlZGlyZWN0JywgJy9iaW5kJywgJy9yZWdpc3RlciddOwoKX3JvdXRlci5kZWZhdWx0LmJlZm9yZUVhY2goZnVuY3Rpb24gKHRvLCBmcm9tLCBuZXh0KSB7CiAgX25wcm9ncmVzcy5kZWZhdWx0LnN0YXJ0KCk7CgogIGlmICgoMCwgX2F1dGguZ2V0VG9rZW4pKCkpIHsKICAgIHRvLm1ldGEudGl0bGUgJiYgX3N0b3JlLmRlZmF1bHQuZGlzcGF0Y2goJ3NldHRpbmdzL3NldFRpdGxlJywgdG8ubWV0YS50aXRsZSk7CiAgICAvKiBoYXMgdG9rZW4qLwoKICAgIGlmICh0by5wYXRoID09PSAnL2xvZ2luJykgewogICAgICBuZXh0KHsKICAgICAgICBwYXRoOiAnLycKICAgICAgfSk7CgogICAgICBfbnByb2dyZXNzLmRlZmF1bHQuZG9uZSgpOwogICAgfSBlbHNlIHsKICAgICAgaWYgKF9zdG9yZS5kZWZhdWx0LmdldHRlcnMucm9sZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgLy8g5Yik5pat5b2T5YmN55So5oi35piv5ZCm5bey5ouJ5Y+W5a6MdXNlcl9pbmZv5L+h5oGvCiAgICAgICAgX3N0b3JlLmRlZmF1bHQuZGlzcGF0Y2goJ0dldEluZm8nKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF9zdG9yZS5kZWZhdWx0LmRpc3BhdGNoKCdHZW5lcmF0ZVJvdXRlcycpLnRoZW4oZnVuY3Rpb24gKGFjY2Vzc1JvdXRlcykgewogICAgICAgICAgICAvLyDmoLnmja5yb2xlc+adg+mZkOeUn+aIkOWPr+iuv+mXrueahOi3r+eUseihqAogICAgICAgICAgICBfcm91dGVyLmRlZmF1bHQuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcyk7IC8vIOWKqOaAgea3u+WKoOWPr+iuv+mXrui3r+eUseihqAoKCiAgICAgICAgICAgIG5leHQoKDAsIF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKCgwLCBfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSh7fSwgdG8pLCB7fSwgewogICAgICAgICAgICAgIHJlcGxhY2U6IHRydWUKICAgICAgICAgICAgfSkpOyAvLyBoYWNr5pa55rOVIOehruS/nWFkZFJvdXRlc+W3suWujOaIkAogICAgICAgICAgfSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgX3N0b3JlLmRlZmF1bHQuZGlzcGF0Y2goJ0xvZ091dCcpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfZWxlbWVudFVpLk1lc3NhZ2UuZXJyb3IoZXJyKTsKCiAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgIHBhdGg6ICcvJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIG5leHQoKTsKICAgICAgfQogICAgfQogIH0gZWxzZSB7CiAgICAvLyDmsqHmnIl0b2tlbgogICAgaWYgKHdoaXRlTGlzdC5pbmRleE9mKHRvLnBhdGgpICE9PSAtMSkgewogICAgICAvLyDlnKjlhY3nmbvlvZXnmb3lkI3ljZXvvIznm7TmjqXov5vlhaUKICAgICAgbmV4dCgpOwogICAgfSBlbHNlIHsKICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLmZ1bGxQYXRoKSk7IC8vIOWQpuWImeWFqOmDqOmHjeWumuWQkeWIsOeZu+W9lemhtQoKICAgICAgX25wcm9ncmVzcy5kZWZhdWx0LmRvbmUoKTsKICAgIH0KICB9Cn0pOwoKX3JvdXRlci5kZWZhdWx0LmFmdGVyRWFjaChmdW5jdGlvbiAoKSB7CiAgX25wcm9ncmVzcy5kZWZhdWx0LmRvbmUoKTsKfSk7"},{"version":3,"sources":["/home/zhoup/IdeaProjects/jeethink/pxing-label-ui/src/permission.js"],"names":["NProgress","configure","showSpinner","whiteList","router","beforeEach","to","from","next","start","meta","title","store","dispatch","path","done","getters","roles","length","then","accessRoutes","addRoutes","replace","catch","err","Message","error","indexOf","fullPath","afterEach"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEAA,mBAAUC,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB;;AAEA,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,gBAAX,EAA6B,OAA7B,EAAsC,WAAtC,CAAlB;;AAEAC,gBAAOC,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCR,qBAAUS,KAAV;;AACA,MAAI,qBAAJ,EAAgB;AACdH,IAAAA,EAAE,CAACI,IAAH,CAAQC,KAAR,IAAiBC,eAAMC,QAAN,CAAe,mBAAf,EAAoCP,EAAE,CAACI,IAAH,CAAQC,KAA5C,CAAjB;AACA;;AACA,QAAIL,EAAE,CAACQ,IAAH,KAAY,QAAhB,EAA0B;AACxBN,MAAAA,IAAI,CAAC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAJ;;AACAd,yBAAUe,IAAV;AACD,KAHD,MAGO;AACL,UAAIH,eAAMI,OAAN,CAAcC,KAAd,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACAN,uBAAMC,QAAN,CAAe,SAAf,EAA0BM,IAA1B,CAA+B,YAAM;AACnCP,yBAAMC,QAAN,CAAe,gBAAf,EAAiCM,IAAjC,CAAsC,UAAAC,YAAY,EAAI;AACpD;AACAhB,4BAAOiB,SAAP,CAAiBD,YAAjB,EAFoD,CAErB;;;AAC/BZ,YAAAA,IAAI,6DAAMF,EAAN;AAAUgB,cAAAA,OAAO,EAAE;AAAnB,eAAJ,CAHoD,CAGrB;AAChC,WAJD;AAKD,SAND,EAMGC,KANH,CAMS,UAAAC,GAAG,EAAI;AACZZ,yBAAMC,QAAN,CAAe,QAAf,EAAyBM,IAAzB,CAA8B,YAAM;AAClCM,+BAAQC,KAAR,CAAcF,GAAd;;AACAhB,YAAAA,IAAI,CAAC;AAAEM,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACD,WAHD;AAID,SAXH;AAYD,OAdD,MAcO;AACLN,QAAAA,IAAI;AACL;AACF;AACF,GAzBD,MAyBO;AACL;AACA,QAAIL,SAAS,CAACwB,OAAV,CAAkBrB,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,MAAAA,IAAI;AACL,KAHD,MAGO;AACLA,MAAAA,IAAI,2BAAoBF,EAAE,CAACsB,QAAvB,EAAJ,CADK,CACkC;;AACvC5B,yBAAUe,IAAV;AACD;AACF;AACF,CArCD;;AAuCAX,gBAAOyB,SAAP,CAAiB,YAAM;AACrB7B,qBAAUe,IAAV;AACD,CAFD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\nimport { getToken } from '@/utils/auth'\n\nNProgress.configure({ showSpinner: false })\n\nconst whiteList = ['/login', '/auth-redirect', '/bind', '/register']\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start()\n  if (getToken()) {\n    to.meta.title && store.dispatch('settings/setTitle', to.meta.title)\n    /* has token*/\n    if (to.path === '/login') {\n      next({ path: '/' })\n      NProgress.done()\n    } else {\n      if (store.getters.roles.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        store.dispatch('GetInfo').then(() => {\n          store.dispatch('GenerateRoutes').then(accessRoutes => {\n            // 根据roles权限生成可访问的路由表\n            router.addRoutes(accessRoutes) // 动态添加可访问路由表\n            next({ ...to, replace: true }) // hack方法 确保addRoutes已完成\n          })\n        }).catch(err => {\n            store.dispatch('LogOut').then(() => {\n              Message.error(err)\n              next({ path: '/' })\n            })\n          })\n      } else {\n        next()\n      }\n    }\n  } else {\n    // 没有token\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next()\n    } else {\n      next(`/login?redirect=${to.fullPath}`) // 否则全部重定向到登录页\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  NProgress.done()\n})\n"]}]}